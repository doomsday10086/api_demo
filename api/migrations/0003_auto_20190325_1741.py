# Generated by Django 2.1.7 on 2019-03-25 17:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('api', '0002_auto_20190324_2107'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='回答')),
                ('agree_number', models.IntegerField(default=0, verbose_name='点赞数')),
                ('disagree_number', models.IntegerField(default=0, verbose_name='点踩数')),
                ('answer_date', models.DateTimeField(auto_now=True, verbose_name='日期')),
            ],
            options={
                'verbose_name_plural': '44. 讨论区：解答',
            },
        ),
        migrations.CreateModel(
            name='AnswerComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(max_length=512, verbose_name='评论内容')),
                ('attachment_path', models.CharField(blank=True, help_text='跟进记录的截图等', max_length=128, null=True, verbose_name='附件路径')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '45. 讨论区：评论',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='标题')),
                ('article_type', models.SmallIntegerField(choices=[(0, '资讯'), (1, '视频')], default=0)),
                ('brief', models.TextField(max_length=512, verbose_name='摘要')),
                ('head_img', models.CharField(max_length=255)),
                ('content', models.TextField(verbose_name='文章正文')),
                ('pub_date', models.DateTimeField(verbose_name='上架日期')),
                ('offline_date', models.DateTimeField(verbose_name='下架日期')),
                ('status', models.SmallIntegerField(choices=[(0, '在线'), (1, '下线')], default=0, verbose_name='状态')),
                ('order', models.SmallIntegerField(default=0, help_text='文章想置顶，可以把数字调大，不要超过1000', verbose_name='权重')),
                ('vid', models.CharField(blank=True, help_text='文章类型是视频, 则需要添加视频VID', max_length=128, null=True, verbose_name='视频VID')),
                ('comment_num', models.SmallIntegerField(default=0, verbose_name='评论数')),
                ('agree_num', models.SmallIntegerField(default=0, verbose_name='点赞数')),
                ('view_num', models.SmallIntegerField(default=0, verbose_name='观看数')),
                ('collect_num', models.SmallIntegerField(default=0, verbose_name='收藏数')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('position', models.SmallIntegerField(choices=[(0, '信息流'), (1, 'banner大图'), (2, 'banner小图')], default=0, verbose_name='位置')),
            ],
            options={
                'verbose_name_plural': '17. 文章',
            },
        ),
        migrations.CreateModel(
            name='ArticleSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name_plural': '16. 文章来源',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '18. 通用收藏表',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content', models.TextField(max_length=1024)),
                ('disagree_number', models.IntegerField(default=0, verbose_name='踩')),
                ('agree_number', models.IntegerField(default=0, verbose_name='赞同数')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '19. 通用评论表',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='活动名称')),
                ('brief', models.TextField(blank=True, null=True, verbose_name='优惠券介绍')),
                ('coupon_type', models.SmallIntegerField(choices=[(0, '通用券'), (1, '满减券'), (2, '折扣券')], default=0, verbose_name='券类型')),
                ('money_equivalent_value', models.IntegerField(verbose_name='等值货币')),
                ('off_percent', models.PositiveSmallIntegerField(blank=True, help_text='只针对折扣券，例7.9折，写79', null=True, verbose_name='折扣百分比')),
                ('minimum_consume', models.PositiveIntegerField(default=0, help_text='仅在满减券时填写此字段', verbose_name='最低消费')),
                ('object_id', models.PositiveIntegerField(blank=True, help_text='可以把优惠券跟课程绑定', null=True, verbose_name='绑定课程')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='数量(张)')),
                ('open_date', models.DateField(verbose_name='优惠券领取开始时间')),
                ('close_date', models.DateField(verbose_name='优惠券领取结束时间')),
                ('valid_begin_date', models.DateField(blank=True, null=True, verbose_name='有效期开始时间')),
                ('valid_end_date', models.DateField(blank=True, null=True, verbose_name='有效结束时间')),
                ('coupon_valid_days', models.PositiveIntegerField(blank=True, help_text='自券被领时开始算起', null=True, verbose_name='优惠券有效期（天）')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name_plural': '20. 优惠券生成记录',
            },
        ),
        migrations.CreateModel(
            name='CouponRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=64, unique=True)),
                ('status', models.SmallIntegerField(choices=[(0, '未使用'), (1, '已使用'), (2, '已过期')], default=0)),
                ('get_time', models.DateTimeField(help_text='用户领取时间', verbose_name='领取时间')),
                ('used_time', models.DateTimeField(blank=True, null=True, verbose_name='使用时间')),
            ],
            options={
                'verbose_name_plural': '32. 用户优惠券',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('course_img', models.CharField(max_length=255)),
                ('course_type', models.SmallIntegerField(choices=[(0, '付费'), (1, 'VIP专享'), (2, '学位课程')])),
                ('brief', models.TextField(max_length=2048, verbose_name='课程概述')),
                ('level', models.SmallIntegerField(choices=[(0, '初级'), (1, '中级'), (2, '高级')], default=1)),
                ('pub_date', models.DateField(blank=True, null=True, verbose_name='发布日期')),
                ('period', models.PositiveIntegerField(default=7, verbose_name='建议学习周期(days)')),
                ('order', models.IntegerField(help_text='从上一个课程数字往后排', verbose_name='课程顺序')),
                ('attachment_path', models.CharField(blank=True, max_length=128, null=True, verbose_name='课件路径')),
                ('status', models.SmallIntegerField(choices=[(0, '上线'), (1, '下线'), (2, '预上线')], default=0)),
                ('template_id', models.SmallIntegerField(default=1, verbose_name='前端模板id')),
            ],
            options={
                'verbose_name_plural': '10.专题课或学位课模块',
            },
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name_plural': '05.课程大类',
            },
        ),
        migrations.CreateModel(
            name='CourseChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.SmallIntegerField(default=1, verbose_name='第几章')),
                ('name', models.CharField(max_length=128)),
                ('summary', models.TextField(blank=True, null=True, verbose_name='章节介绍')),
                ('pub_date', models.DateField(auto_now_add=True, verbose_name='发布日期')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coursechapters', to='api.Course')),
            ],
            options={
                'verbose_name_plural': '14. 课程章节',
            },
        ),
        migrations.CreateModel(
            name='CourseDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hours', models.IntegerField(verbose_name='课时')),
                ('course_slogan', models.CharField(blank=True, max_length=125, null=True)),
                ('video_brief_link', models.CharField(blank=True, max_length=255, null=True, verbose_name='课程介绍')),
                ('why_study', models.TextField(verbose_name='为什么学习这门课程')),
                ('what_to_study_brief', models.TextField(verbose_name='我将学到哪些内容')),
                ('career_improvement', models.TextField(verbose_name='此项目如何有助于我的职业生涯')),
                ('prerequisite', models.TextField(max_length=1024, verbose_name='课程先修要求')),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Course')),
                ('recommend_courses', models.ManyToManyField(blank=True, related_name='recommend_by', to='api.Course')),
            ],
            options={
                'verbose_name_plural': '11.课程或学位模块详细',
            },
        ),
        migrations.CreateModel(
            name='CourseOutline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('content', models.TextField(max_length=2048, verbose_name='内容')),
                ('course_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.CourseDetail')),
            ],
            options={
                'verbose_name_plural': '13. 课程大纲',
            },
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_teacher', models.FloatField(default=0, verbose_name='讲师讲解是否清晰')),
                ('about_video', models.FloatField(default=0, verbose_name='内容实用')),
                ('about_course', models.FloatField(default=0, verbose_name='课程内容通俗易懂')),
                ('review', models.TextField(max_length=1024, verbose_name='评价')),
                ('disagree_number', models.IntegerField(default=0, verbose_name='踩')),
                ('agree_number', models.IntegerField(default=0, verbose_name='赞同数')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='评价日期')),
                ('is_recommend', models.BooleanField(default=False, verbose_name='热评推荐')),
                ('hide', models.BooleanField(default=False, verbose_name='不在前端页面显示此条评价')),
            ],
            options={
                'verbose_name_plural': '17. 课程评价（购买课程后才能评价）',
            },
        ),
        migrations.CreateModel(
            name='CourseSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommend_date', models.DateField(verbose_name='推荐交作业日期')),
            ],
            options={
                'verbose_name_plural': '33. 课程模块计划表（学位课）',
            },
        ),
        migrations.CreateModel(
            name='CourseSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('order', models.PositiveSmallIntegerField(help_text='建议每个课时之间空1至2个值，以备后续插入课时', verbose_name='课时排序')),
                ('section_type', models.SmallIntegerField(choices=[(0, '文档'), (1, '练习'), (2, '视频')], default=2)),
                ('section_link', models.CharField(blank=True, help_text='若是video，填vid,若是文档，填link', max_length=255, null=True)),
                ('video_time', models.CharField(blank=True, max_length=32, null=True, verbose_name='视频时长')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('free_trail', models.BooleanField(default=False, verbose_name='是否可试看')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coursesections', to='api.CourseChapter')),
            ],
            options={
                'verbose_name_plural': '15. 课时',
            },
        ),
        migrations.CreateModel(
            name='CourseSubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.CourseCategory')),
            ],
            options={
                'verbose_name_plural': '06.课程子类',
            },
        ),
        migrations.CreateModel(
            name='DegreeCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('course_img', models.CharField(max_length=255, verbose_name='缩略图')),
                ('brief', models.TextField(verbose_name='学位课程简介')),
                ('total_scholarship', models.PositiveIntegerField(default=40000, verbose_name='总奖学金(贝里)')),
                ('mentor_compensation_bonus', models.PositiveIntegerField(default=15000, verbose_name='本课程的导师辅导费用(贝里)')),
                ('period', models.PositiveIntegerField(default=150, verbose_name='建议学习周期(days)')),
                ('prerequisite', models.TextField(max_length=1024, verbose_name='课程先修要求')),
            ],
            options={
                'verbose_name_plural': '07.学位课',
            },
        ),
        migrations.CreateModel(
            name='DegreeCourseReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_teacher', models.FloatField(default=0, verbose_name='讲师讲解是否清晰')),
                ('about_video', models.FloatField(default=0, verbose_name='视频质量')),
                ('about_course', models.FloatField(default=0, verbose_name='课程')),
                ('review', models.TextField(max_length=1024, verbose_name='评价')),
                ('disagree_number', models.IntegerField(default=0, verbose_name='踩')),
                ('agree_number', models.IntegerField(default=0, verbose_name='赞同数')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='评价日期')),
                ('is_recommend', models.BooleanField(default=False, verbose_name='热评推荐')),
                ('hide', models.BooleanField(default=False, verbose_name='不在前端页面显示此条评价')),
                ('course', models.ForeignKey(blank=True, help_text='不填写即代表评价整个学位课程', limit_choices_to={'course_type': 2}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Course', verbose_name='评价学位模块')),
            ],
            options={
                'verbose_name_plural': '18. 学位课评价（购买课程后才能评价）',
            },
        ),
        migrations.CreateModel(
            name='DegreeRegistrationForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_company', models.CharField(max_length=64)),
                ('current_position', models.CharField(max_length=64)),
                ('current_salary', models.IntegerField()),
                ('work_experience', models.IntegerField()),
                ('open_module', models.BooleanField(default=True, verbose_name='是否开通第1模块')),
                ('stu_specified_mentor', models.CharField(blank=True, max_length=32, null=True, verbose_name='学员自行指定的导师名')),
                ('why_take_this_course', models.TextField(max_length=1024, verbose_name='报此课程原因')),
                ('why_choose_us', models.TextField(max_length=1024, verbose_name='为何选路飞')),
                ('your_expectation', models.TextField(max_length=1024, verbose_name='你的期待')),
                ('memo', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': '35. 报名表（学位课）',
            },
        ),
        migrations.CreateModel(
            name='EnrolledCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_date', models.DateTimeField(auto_now_add=True)),
                ('valid_begin_date', models.DateField(verbose_name='有效期开始自')),
                ('valid_end_date', models.DateField(verbose_name='有效期结束至')),
                ('status', models.SmallIntegerField(choices=[(0, '已开通'), (1, '已过期')], default=0)),
            ],
            options={
                'verbose_name_plural': '34. 报名专题课',
            },
        ),
        migrations.CreateModel(
            name='EnrolledDegreeCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_date', models.DateTimeField(auto_now_add=True)),
                ('valid_begin_date', models.DateField(blank=True, null=True, verbose_name='有效期开始自')),
                ('valid_end_date', models.DateField(blank=True, null=True, verbose_name='有效期结束至')),
                ('study_status', models.SmallIntegerField(choices=[(0, '在学中'), (1, '休学中'), (2, '已毕业'), (3, '超时结业'), (4, '未开始')], default=0)),
                ('mentor_fee_balance', models.PositiveIntegerField(help_text='这个学员的导师费用，每有惩罚，需在此字段同时扣除', verbose_name='导师费用余额')),
            ],
            options={
                'verbose_name_plural': '36. 报名学位课',
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='作业题目')),
                ('order', models.PositiveSmallIntegerField(help_text='同一课程的每个作业之前的order值间隔1-2个数', verbose_name='作业顺序')),
                ('homework_type', models.SmallIntegerField(choices=[(0, '作业'), (1, '模块通关考核')], default=0)),
                ('requirement', models.TextField(max_length=1024, verbose_name='作业需求')),
                ('threshold', models.TextField(max_length=1024, verbose_name='踩分点')),
                ('recommend_period', models.PositiveSmallIntegerField(default=7, verbose_name='推荐完成周期(天)')),
                ('scholarship_value', models.PositiveSmallIntegerField(verbose_name='为该作业分配的奖学金(贝里)')),
                ('note', models.TextField(blank=True, null=True)),
                ('enabled', models.BooleanField(default=True, help_text='本作业如果后期不需要了，不想让学员看到，可以设置为False')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.CourseChapter')),
            ],
            options={
                'verbose_name_plural': '16. 章节作业',
            },
        ),
        migrations.CreateModel(
            name='HomeworkRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.SmallIntegerField(blank=True, choices=[(100, 'A+'), (90, 'A'), (85, 'B+'), (80, 'B'), (70, 'B-'), (60, 'C+'), (50, 'C'), (40, 'C-'), (-1, 'D'), (0, 'N/A'), (-100, 'COPY')], null=True, verbose_name='分数')),
                ('mentor_comment', models.TextField(blank=True, null=True, verbose_name='导师批注')),
                ('status', models.SmallIntegerField(choices=[(0, '待批改'), (1, '已通过'), (2, '不合格')], default=0, verbose_name='作业状态')),
                ('submit_num', models.SmallIntegerField(default=0, verbose_name='提交次数')),
                ('correct_date', models.DateTimeField(blank=True, null=True, verbose_name='备注日期')),
                ('note', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='作业提交日期')),
                ('check_date', models.DateTimeField(blank=True, null=True, verbose_name='批改日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='提交日期')),
                ('reward_status', models.SmallIntegerField(default=0, verbose_name='作业记录奖惩状态')),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Homework')),
            ],
            options={
                'verbose_name_plural': '41. 作业',
            },
        ),
        migrations.CreateModel(
            name='OftenAskedQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField(max_length=1024)),
                ('content_type', models.ForeignKey(limit_choices_to={'model__contains': 'course'}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name_plural': '12. 常见问题',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.SmallIntegerField(choices=[(0, '微信'), (1, '支付宝'), (2, '优惠码'), (3, '贝里')])),
                ('payment_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='支付第3方订单号')),
                ('order_number', models.CharField(max_length=128, unique=True, verbose_name='订单号')),
                ('actual_amount', models.FloatField(verbose_name='实付金额')),
                ('status', models.SmallIntegerField(choices=[(0, '交易成功'), (1, '待支付'), (2, '退费申请中'), (3, '已退费'), (4, '主动取消'), (5, '超时取消')], verbose_name='状态')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='订单生成时间')),
                ('pay_time', models.DateTimeField(blank=True, null=True, verbose_name='付款时间')),
                ('cancel_time', models.DateTimeField(blank=True, null=True, verbose_name='订单取消时间')),
            ],
            options={
                'verbose_name_plural': '37. 订单表',
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('original_price', models.FloatField(verbose_name='课程原价')),
                ('price', models.FloatField(verbose_name='折后价格')),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('valid_period_display', models.CharField(max_length=32, verbose_name='有效期显示')),
                ('valid_period', models.PositiveIntegerField(verbose_name='有效期(days)')),
                ('memo', models.CharField(blank=True, max_length=255, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Order')),
            ],
            options={
                'verbose_name_plural': '38. 订单详细',
            },
        ),
        migrations.CreateModel(
            name='PricePolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('valid_period', models.SmallIntegerField(choices=[(1, '1天'), (3, '3天'), (7, '1周'), (14, '2周'), (30, '1个月'), (60, '2个月'), (90, '3个月'), (180, '6个月'), (210, '12个月'), (540, '18个月'), (720, '24个月')])),
                ('price', models.FloatField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name_plural': '19. 价格策略',
            },
        ),
        migrations.CreateModel(
            name='QACounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('data_type', models.SmallIntegerField(choices=[(0, '点赞'), (1, '踩'), (2, '同问')])),
                ('date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': '46. 问题和回答的赞同数量统计',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=128, null=True, verbose_name='问题概要')),
                ('question_type', models.SmallIntegerField(choices=[(0, '专题课程问题'), (1, '学位课程问题')], default=0, verbose_name='来源')),
                ('content', models.TextField(max_length=1024, verbose_name='问题内容')),
                ('enquiries_count', models.IntegerField(default=0, verbose_name='同问者计数')),
                ('attachment_path', models.CharField(blank=True, help_text='问题记录的截图等', max_length=128, null=True, verbose_name='附件路径')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.SmallIntegerField(choices=[(0, '待解答'), (1, '已解答'), (2, '已关闭')], default=0)),
            ],
            options={
                'verbose_name_plural': '43. 讨论区：课程提问',
            },
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_percent', models.PositiveSmallIntegerField(help_text='只填百分值，如80,代表80%', verbose_name='奖励档位(时间百分比)')),
                ('value', models.PositiveIntegerField(verbose_name='奖学金数额')),
                ('degree_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.DegreeCourse')),
            ],
            options={
                'verbose_name_plural': '09.学位课奖学金',
            },
        ),
        migrations.CreateModel(
            name='StudyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_date', models.DateField(blank=True, null=True, verbose_name='开通日期')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='完成日期')),
                ('status', models.SmallIntegerField(choices=[(2, '在学'), (1, '未开通'), (0, '已完成')], default=1)),
                ('course_module', models.ForeignKey(limit_choices_to={'course_type': 2}, on_delete=django.db.models.deletion.CASCADE, to='api.Course', verbose_name='学位模块')),
                ('enrolled_degree_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledDegreeCourse')),
            ],
            options={
                'verbose_name_plural': '39. 学习记录表（报名学位课程后，每个模块会立刻生成一条学习纪录）',
            },
        ),
        migrations.CreateModel(
            name='StuFollowUpRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followup_tool', models.SmallIntegerField(choices=[(0, 'QQ'), (1, '微信'), (2, '电话'), (3, '系统通知')], default=1)),
                ('record', models.TextField(verbose_name='跟进记录')),
                ('attachment_path', models.CharField(blank=True, help_text='跟进记录的截图等', max_length=128, null=True, verbose_name='附件路径')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('enrolled_degree_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledDegreeCourse', verbose_name='学生')),
            ],
            options={
                'verbose_name_plural': '42. 学员跟进记录',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('role', models.SmallIntegerField(choices=[(0, '讲师'), (1, '导师')], default=0)),
                ('title', models.CharField(max_length=64, verbose_name='职位、职称')),
                ('signature', models.CharField(blank=True, help_text='导师签名', max_length=255, null=True)),
                ('image', models.CharField(max_length=128)),
                ('brief', models.TextField(max_length=1024)),
            ],
            options={
                'verbose_name_plural': '08.导师或讲师',
            },
        ),
        migrations.CreateModel(
            name='TransactionRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='金额')),
                ('transaction_type', models.SmallIntegerField(choices=[(0, '收入'), (1, '支出'), (2, '退款'), (3, '提现')])),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='关联对象')),
                ('transaction_number', models.CharField(max_length=128, unique=True, verbose_name='流水号')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('memo', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'verbose_name_plural': '40. 贝里交易记录',
            },
        ),
        migrations.AlterModelOptions(
            name='account',
            options={'verbose_name_plural': '01. 账户信息'},
        ),
        migrations.AlterModelOptions(
            name='feedback',
            options={'verbose_name_plural': '04. 用户反馈'},
        ),
        migrations.AlterModelOptions(
            name='tags',
            options={'verbose_name_plural': '03. Tag标签'},
        ),
        migrations.AlterModelOptions(
            name='userauthtoken',
            options={'verbose_name_plural': '02. 用户Token'},
        ),
        migrations.AddField(
            model_name='transactionrecord',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account'),
        ),
        migrations.AddField(
            model_name='transactionrecord',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='stufollowuprecord',
            name='mentor',
            field=models.ForeignKey(limit_choices_to={'role': 1}, on_delete=django.db.models.deletion.CASCADE, related_name='mentor', to='api.Account', verbose_name='导师'),
        ),
        migrations.AddField(
            model_name='question',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account', verbose_name='提问者'),
        ),
        migrations.AddField(
            model_name='question',
            name='course_section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.CourseSection'),
        ),
        migrations.AddField(
            model_name='question',
            name='degree_course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.DegreeCourse'),
        ),
        migrations.AddField(
            model_name='qacounter',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account'),
        ),
        migrations.AddField(
            model_name='qacounter',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='order',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account'),
        ),
        migrations.AddField(
            model_name='homeworkrecord',
            name='mentor',
            field=models.ForeignKey(limit_choices_to={'role': 1}, on_delete=django.db.models.deletion.CASCADE, related_name='my_stu_homework_record', to='api.Account', verbose_name='导师'),
        ),
        migrations.AddField(
            model_name='homeworkrecord',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledDegreeCourse', verbose_name='学生'),
        ),
        migrations.AddField(
            model_name='enrolleddegreecourse',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account'),
        ),
        migrations.AddField(
            model_name='enrolleddegreecourse',
            name='degree_course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.DegreeCourse'),
        ),
        migrations.AddField(
            model_name='enrolleddegreecourse',
            name='mentor',
            field=models.ForeignKey(blank=True, limit_choices_to={'role': 1}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='my_students', to='api.Account', verbose_name='导师'),
        ),
        migrations.AddField(
            model_name='enrolleddegreecourse',
            name='order_detail',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.OrderDetail'),
        ),
        migrations.AddField(
            model_name='enrolledcourse',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account'),
        ),
        migrations.AddField(
            model_name='enrolledcourse',
            name='course',
            field=models.ForeignKey(limit_choices_to=models.Q(_negated=True, course_type=2), on_delete=django.db.models.deletion.CASCADE, to='api.Course'),
        ),
        migrations.AddField(
            model_name='enrolledcourse',
            name='order_detail',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.OrderDetail'),
        ),
        migrations.AddField(
            model_name='degreeregistrationform',
            name='enrolled_degree',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledDegreeCourse'),
        ),
        migrations.AddField(
            model_name='degreecoursereview',
            name='enrolled_course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledDegreeCourse'),
        ),
        migrations.AddField(
            model_name='degreecoursereview',
            name='tags',
            field=models.ManyToManyField(blank=True, to='api.Tags', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='degreecourse',
            name='teachers',
            field=models.ManyToManyField(to='api.Teacher', verbose_name='课程讲师'),
        ),
        migrations.AddField(
            model_name='courseschedule',
            name='homework',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Homework'),
        ),
        migrations.AddField(
            model_name='courseschedule',
            name='study_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.StudyRecord'),
        ),
        migrations.AddField(
            model_name='coursereview',
            name='enrolled_course',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.EnrolledCourse'),
        ),
        migrations.AddField(
            model_name='coursereview',
            name='tags',
            field=models.ManyToManyField(blank=True, to='api.Tags', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='coursedetail',
            name='teachers',
            field=models.ManyToManyField(to='api.Teacher', verbose_name='课程讲师'),
        ),
        migrations.AddField(
            model_name='course',
            name='degree_course',
            field=models.ForeignKey(blank=True, help_text='若是学位课程，此处关联学位表', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.DegreeCourse'),
        ),
        migrations.AddField(
            model_name='course',
            name='sub_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.CourseSubCategory'),
        ),
        migrations.AddField(
            model_name='couponrecord',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account', verbose_name='拥有者'),
        ),
        migrations.AddField(
            model_name='couponrecord',
            name='coupon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Coupon'),
        ),
        migrations.AddField(
            model_name='couponrecord',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Order', verbose_name='关联订单'),
        ),
        migrations.AddField(
            model_name='comment',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account', verbose_name='会员名'),
        ),
        migrations.AddField(
            model_name='comment',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='类型'),
        ),
        migrations.AddField(
            model_name='comment',
            name='p_node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Comment', verbose_name='父级评论'),
        ),
        migrations.AddField(
            model_name='collection',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account'),
        ),
        migrations.AddField(
            model_name='collection',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='article',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ArticleSource', verbose_name='来源'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(blank=True, to='api.Tags', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='answercomment',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account', verbose_name='评论者'),
        ),
        migrations.AddField(
            model_name='answercomment',
            name='answer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Answer'),
        ),
        migrations.AddField(
            model_name='answercomment',
            name='reply_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.AnswerComment', verbose_name='基于评论的评论'),
        ),
        migrations.AddField(
            model_name='answer',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Account', verbose_name='回答者'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Question', verbose_name='问题'),
        ),
        migrations.AlterUniqueTogether(
            name='studyrecord',
            unique_together={('enrolled_degree_course', 'course_module')},
        ),
        migrations.AlterUniqueTogether(
            name='qacounter',
            unique_together={('content_type', 'object_id', 'account')},
        ),
        migrations.AlterUniqueTogether(
            name='pricepolicy',
            unique_together={('content_type', 'object_id', 'valid_period')},
        ),
        migrations.AlterUniqueTogether(
            name='orderdetail',
            unique_together={('order', 'content_type', 'object_id')},
        ),
        migrations.AlterUniqueTogether(
            name='oftenaskedquestion',
            unique_together={('content_type', 'object_id', 'question')},
        ),
        migrations.AlterUniqueTogether(
            name='homeworkrecord',
            unique_together={('homework', 'student')},
        ),
        migrations.AlterUniqueTogether(
            name='homework',
            unique_together={('chapter', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='enrolleddegreecourse',
            unique_together={('account', 'degree_course')},
        ),
        migrations.AlterUniqueTogether(
            name='coursesection',
            unique_together={('chapter', 'section_link')},
        ),
        migrations.AlterUniqueTogether(
            name='courseschedule',
            unique_together={('study_record', 'homework')},
        ),
        migrations.AlterUniqueTogether(
            name='courseoutline',
            unique_together={('course_detail', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='coursechapter',
            unique_together={('course', 'chapter')},
        ),
        migrations.AlterUniqueTogether(
            name='collection',
            unique_together={('content_type', 'object_id', 'account')},
        ),
    ]
